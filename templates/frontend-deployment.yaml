apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "multi-container-app.fullname" . }}-frontend
  labels:
    {{- include "multi-container-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "multi-container-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "multi-container-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: html-content
              mountPath: /usr/share/nginx/html
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "multi-container-app.fullname" . }}-frontend-config
        - name: html-content
          configMap:
            name: {{ include "multi-container-app.fullname" . }}-frontend-files
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "multi-container-app.fullname" . }}-frontend-config
  labels:
    {{- include "multi-container-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  default.conf: |
    server {
        listen       80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass http://{{ include "multi-container-app.fullname" . }}-backend:{{ .Values.backend.service.port }};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "multi-container-app.fullname" . }}-frontend
  labels:
    {{- include "multi-container-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
    - port: {{ .Values.frontend.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "multi-container-app.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
